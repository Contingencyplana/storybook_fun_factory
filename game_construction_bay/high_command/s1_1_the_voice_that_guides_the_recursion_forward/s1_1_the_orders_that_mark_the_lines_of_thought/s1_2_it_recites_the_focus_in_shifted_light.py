"""
Filename: s1_2_it_recites_the_focus_in_shifted_light.py

ðŸ“œ See GDJ 5.8: May 6 â€“ The Genesis Command
(Second line of Stanza 1 in the Layer 5 Genesis Cycle of high_command)

Purpose:
Provides a structured diagnostic of the current recursive focus,
using the active front data and summarizing the player's or assistantâ€™s
point of engagement during major operations.

It is not concerned with dispatch or orchestrationâ€”only reflection.
"""

from pathlib import Path
import json

# ðŸ”– Shared memory location from previous stanza line
ACTIVE_FRONT_PATH = Path(__file__).parent / "active_front.json"

def recite_active_focus(verbose: bool = True) -> str:
    """
    Summarizes the current active recursive focus.
    Returns a human-readable string suitable for logging or CLI.

    Args:
        verbose (bool): Whether to print the output immediately.

    Returns:
        str: Summary report of the active recursive front.
    """
    if not ACTIVE_FRONT_PATH.exists():
        summary = "ðŸ”• No active recursive front has been marked yet."
        if verbose:
            print(summary)
        return summary

    with ACTIVE_FRONT_PATH.open("r", encoding="utf-8") as f:
        front = json.load(f)

    summary = (
        f"ðŸ§  RECURSIVE FOCUS SUMMARY\n"
        f"â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€\n"
        f"ðŸ§© Component: {front.get('component', '[Unknown]')}\n"
        f"ðŸ“‚ Stanza:    {front.get('stanza', '[Unknown]')}\n"
        f"ðŸ“„ File:      {front.get('line', '[Unknown]')}\n"
    )

    if front.get("gdj"):
        summary += f"ðŸ“œ GDJ Ref:   {front['gdj']}\n"

    if verbose:
        print(summary)

    return summary

# Optional CLI usage
if __name__ == "__main__":
    recite_active_focus(verbose=True)
