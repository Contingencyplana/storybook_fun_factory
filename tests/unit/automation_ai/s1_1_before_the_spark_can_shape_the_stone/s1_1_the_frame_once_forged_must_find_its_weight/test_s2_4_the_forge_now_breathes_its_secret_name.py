"""
Filename: test_s2_4_the_forge_now_breathes_its_secret_name.py
(Tests for The Forge Now Breathes Its Secret Name)

This file tests ForgeBinderâ€™s ability to embed metadata, bind recursive
templates into a complete Python module, and optionally write to disk.
"""

import sys
import os
import importlib.util
import tempfile
import pytest

# Load dynamic_importer.py manually
helper_path = os.path.abspath(os.path.join(os.path.dirname(__file__), "../../../test_helpers/dynamic_importer.py"))
spec = importlib.util.spec_from_file_location("dynamic_importer", helper_path)
dynamic_importer = importlib.util.module_from_spec(spec)
spec.loader.exec_module(dynamic_importer)

# Import the stanza file
ForgeBinder = dynamic_importer.dynamic_import_module(
    os.path.abspath(os.path.join("src", "storybook_fun_factory", "automation_ai",
                                 "s1_1_before_the_spark_can_shape_the_stone",
                                 "s1_1_the_frame_once_forged_must_find_its_weight",
                                 "s2_4_the_forge_now_breathes_its_secret_name.py"))
).ForgeBinder

def test_bind_metadata_structure():
    binder = ForgeBinder(author="unit_test")
    name = "test_flame_xyz"
    lines = ["Line one", "Line two"]
    block = "#> Folded logic here"
    result = binder.bind_metadata(name, lines, block)

    assert "Auto-generated by unit_test" in result
    assert "Flame ID: test_flame_xyz" in result
    assert "- Line one" in result
    assert "#> Folded logic here" in result

def test_finalize_flame_writes_file():
    binder = ForgeBinder()
    name = "flame_test"
    lines = ["Burn the edge", "Name the thread"]
    block = "#> Final recursive action"

    with tempfile.TemporaryDirectory() as temp_dir:
        output_path = os.path.join(temp_dir, "flame_test_output.py")
        result_path = binder.finalize_flame(name, lines, block, output_path)

        assert os.path.exists(result_path)
        with open(result_path, "r", encoding="utf-8") as f:
            contents = f.read()
            assert "Flame ID: flame_test" in contents
            assert "#> Final recursive action" in contents
